{"version":3,"sources":["webpack:///./src/components/Projects/styles.tsx","webpack:///./src/components/Projects/index.tsx","webpack:///./src/pages/project.tsx"],"names":["Projects","styled","div","Project","Card","Content","Image","figure","Title","h3","Description","p","Date","Tags","Tag","span","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","edges","Container","section","TitleSection","title","subtitle","center","map","item","node","id","slug","fields","cover","description","date","tags","key","to","whileHover","scale","whileTap","fluid","childImageSharp","alt","ProjectPage","Layout","SEO"],"mappings":"2/kBAGaA,EAAWC,IAAOC,IAAV,uEAAGD,CAAH,SACf,+CAGOE,EAAUF,IAAOC,IAAV,sEAAGD,CAAH,SACd,4EAGOG,EAAOH,IAAOC,IAAV,mEAAGD,CAAH,SACX,oJAGOI,EAAUJ,IAAOC,IAAV,sEAAGD,CAAH,SACd,kCAGOK,EAAQL,IAAOM,OAAV,oEAAGN,CAAH,SACZ,gBAGOO,EAAQP,IAAOQ,GAAV,oEAAGR,CAAH,SACZ,wCAGOS,EAAcT,IAAOU,EAAV,0EAAGV,CAAH,MAEXW,EAAOX,IAAOQ,GAAV,mEAAGR,CAAH,SACX,sCAGOY,EAAOZ,IAAOC,IAAV,mEAAGD,CAAH,QACX,uDAGOa,EAAMb,IAAOc,KAAV,kEAAGd,CAAH,QACV,iNC8ESD,EAnFY,WAAM,aACvBgB,EADuB,EACvBA,eAAgBC,EADO,EACPA,kBAsClBC,EAA6BF,EAAeG,YAC5CnB,EAAsBiB,EAAkBG,MAE9C,OAEE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAON,EAAaM,MAAOC,SAAUP,EAAaO,SAAUC,QAAM,IAChF,kBAAC,EAAD,KACG1B,EAAS2B,KAAI,SAACC,GAAS,MAKlBA,EAAKC,KAHPC,EAFoB,EAEpBA,GACUC,EAHU,EAGpBC,OAAUD,KAHU,IAIpBZ,YAAeK,EAJK,EAILA,MAAOS,EAJF,EAIEA,MAAOC,EAJT,EAISA,YAAaC,EAJtB,EAIsBA,KAAMC,EAJ5B,EAI4BA,KAGlD,OACE,kBAAC,EAAD,CAAgBC,IAAKP,GACnB,kBAAC,IAAD,CAAMQ,GAAIP,GACR,kBAAC,IAAO7B,IAAR,CAAYqC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1D,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKE,MAAOT,EAAMU,gBAAgBD,MAAOE,IAAKpB,KAEhD,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcW,GACd,kBAAC,EAAD,KAAeX,GACf,kBAAC,EAAD,KAAqBU,IAEvB,kBAAC,EAAD,KACGE,EAAKT,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAYS,IAAKT,GAAOA,iBCvFjCiB,UATe,WAC5B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKvB,MAAM,YACX,kBAAC,EAAD","file":"component---src-pages-project-tsx-688b094780379049c450.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Projects = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`;\n\nexport const Project = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`;\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`;\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Description = styled.p``;\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-indigo-500`};\n`;\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n`;\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-indigo-900 border border-teal-400 rounded-full px-2 py-1 mr-2`}\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Link from 'gatsby-link';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport { SectionTitle, ImageSharpFluid } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Project {\n  node: {\n    id: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n      description: string;\n      date: string;\n      tags: string[];\n      cover: {\n        childImageSharp: {\n          fluid: ImageSharpFluid;\n        };\n      };\n    };\n  };\n}\n\nconst Projects: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"projects section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"project\" }, published: { eq: true } } }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const Projects: Project[] = allMarkdownRemark.edges;\n\n  return (\n    \n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Projects>\n        {Projects.map((item) => {\n          const {\n            id,\n            fields: { slug },\n            frontmatter: { title, cover, description, date, tags }\n          } = item.node;\n\n          return (\n            <Styled.Project key={id}>\n              <Link to={slug}>\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <Styled.Card>\n                    <Styled.Image>\n                      <Img fluid={cover.childImageSharp.fluid} alt={title} />\n                    </Styled.Image>\n                    <Styled.Content>\n                      <Styled.Date>{date}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item}>{item}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </Link>\n            </Styled.Project>\n          );\n        })}\n      </Styled.Projects>\n    </Container>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Projects from 'components/Projects';\n\nconst ProjectPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Project\" />\n      <Projects />\n    </Layout>\n  );\n};\n\nexport default ProjectPage;\n"],"sourceRoot":""}